# Generated by Django 5.2 on 2025-06-16 01:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('empresa_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('cnpj', models.CharField(max_length=20, unique=True)),
                ('CEP', models.CharField(max_length=20, unique=True)),
                ('endereco', models.CharField(unique=True)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('telefone', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unidade_compra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True)),
                ('sigla', models.CharField(max_length=150, unique=True)),
                ('tipo', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'Unidade_compra',
            },
        ),
        migrations.CreateModel(
            name='Unidade_medida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True)),
                ('sigla', models.CharField(max_length=150, unique=True)),
                ('tipo', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'Unidade_medida',
            },
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=20)),
                ('CPF', models.CharField(max_length=14)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
            ],
            options={
                'db_table': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Categorias_Produtos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
            ],
            options={
                'db_table': 'Categorias_Produtos',
            },
        ),
        migrations.CreateModel(
            name='Categorias_Materia_prima',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
            ],
            options={
                'db_table': 'Categorias_Materia_prima',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('cpf', models.CharField(max_length=20, unique=True)),
                ('telefone', models.CharField(max_length=20, unique=True)),
                ('cargo', models.CharField()),
                ('ativo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MateriaPrima',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_materia_prima', models.CharField(max_length=100, unique=True)),
                ('metragem_por_unidade', models.CharField(default='', max_length=50)),
                ('estoque_atual', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('estoque_maximo', models.IntegerField(default=100)),
                ('estoque_minimo', models.IntegerField(default=1)),
                ('custo_unitario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('data_ultima_atualizacao', models.DateField(auto_now=True)),
                ('fornecedor_preferencial', models.CharField(max_length=100)),
                ('img_material', models.ImageField(default='', upload_to='imagens_produtos/imagens_estoque')),
                ('categoria', models.ForeignKey(db_column='categoria', on_delete=django.db.models.deletion.PROTECT, to='cadastro.categorias_materia_prima')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
                ('unidade_compra', models.ForeignKey(db_column='unidade_compra', default=None, on_delete=django.db.models.deletion.PROTECT, to='cadastro.unidade_compra')),
                ('unidade_medida', models.ForeignKey(blank=True, db_column='nome', default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='cadastro.unidade_medida')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_produto', models.CharField(max_length=255, unique=True)),
                ('descricao', models.TextField()),
                ('codigo_barras', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('custo_producao', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('estoque_atual', models.IntegerField()),
                ('estoque_maximo', models.IntegerField(default=100)),
                ('estoque_minimo', models.IntegerField(default=1)),
                ('data_ultima_atualizacao', models.DateTimeField(auto_now=True)),
                ('img_produto', models.ImageField(blank=True, default=True, null=True, upload_to='media/imagens_produtos/imagens_estoque')),
                ('categoria', models.ForeignKey(db_column='categoria', default='Sem Categoria', on_delete=django.db.models.deletion.PROTECT, to='cadastro.categorias_produtos')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
            ],
            options={
                'db_table': 'Produto',
            },
        ),
        migrations.CreateModel(
            name='Producao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('descricao', models.TextField()),
                ('moldes', models.TextField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('tamanho', models.CharField(max_length=50)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
                ('materiais', models.ForeignKey(db_column='materiais_id', on_delete=django.db.models.deletion.PROTECT, to='cadastro.materiaprima')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producoes', to='cadastro.produto')),
            ],
            options={
                'db_table': 'Producao',
            },
        ),
        migrations.CreateModel(
            name='Vendas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField(db_column='Valor')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('comprador', models.ForeignKey(db_column='comprador_id', on_delete=django.db.models.deletion.PROTECT, related_name='vendas_por_id', to='cadastro.clientes')),
                ('comprador_nome', models.ForeignKey(db_column='comprador_nome', on_delete=django.db.models.deletion.PROTECT, related_name='vendas_por_nome', to='cadastro.clientes', to_field='nome')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro.empresa')),
            ],
            options={
                'db_table': 'Vendas',
            },
        ),
    ]
